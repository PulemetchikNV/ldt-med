version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: ${PROJECT_NAME:-ldt-med}-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ldt_med_db}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    container_name: ${PROJECT_NAME:-ldt-med}-pgadmin
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-root}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-ldt-med}-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - NODE_ENV=${NODE_ENV:-development}
      - DATABASE_URL=${DATABASE_URL}
      - ENABLE_AI_RESPONSE=${ENABLE_AI_RESPONSE:-true}
      - IS_PROXY_API_ENABLED=${IS_PROXY_API_ENABLED:-false}
      - PROXY_API_KEY=${PROXY_API_KEY}
      - IS_IMAGE_GENERATION_ENABLED=${IS_IMAGE_GENERATION_ENABLED:-true}
      # ML Service configuration
      - ML_SERVICE_URL=http://ml-service:8000
      - ML_ANALYZE_URL=http://83.151.2.50:9175/analyze
      - ML_DICOM_CLASSIFY_URL=http://83.151.2.50:9174/classify-study/
    depends_on:
      - postgres
      - ml-service
    networks:
      - app-network
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
        - VITE_KEYCLOAK_URL=${VITE_KEYCLOAK_URL}
        - VITE_KEYCLOAK_REALM=${VITE_KEYCLOAK_REALM}
        - VITE_KEYCLOAK_CLIENT_ID=${VITE_KEYCLOAK_CLIENT_ID}
        - VITE_KEYCLOAK_ISSUER=${VITE_KEYCLOAK_ISSUER}

    container_name: ${PROJECT_NAME:-ldt-med}-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8080}:80"
      - "443:443"
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_KEYCLOAK_URL=${VITE_KEYCLOAK_URL}
      - VITE_KEYCLOAK_REALM=${VITE_KEYCLOAK_REALM}
      - VITE_KEYCLOAK_CLIENT_ID=${VITE_KEYCLOAK_CLIENT_ID}
      - VITE_KEYCLOAK_ISSUER=${VITE_KEYCLOAK_ISSUER}
    depends_on:
      - backend
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    networks:
      - app-network

  ml-service:
    build: ./ml
    container_name: ${PROJECT_NAME:-ldt-med}-ml
    restart: unless-stopped
    ports:
      - "${ML_PORT:-5001}:8000"
    volumes:
      - ./ml:/app
    environment:
      - MODEL_PATH=/app/best_model.pth
    networks:
      - app-network
      
  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - frontend

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
  certbot-etc:
  certbot-www: